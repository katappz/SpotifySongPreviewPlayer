/**
 * File generated by Magnet rest2mobile 1.1 - Oct 29, 2016 11:00:03 PM
 * @see {@link http://developer.magnet.com}
 */

package pt.olive.katappz.spotifysongpreviewplayer.models.spotify;

import java.util.List;

/**
 * Generated from json example
{
  "album" : {
    "album_type" : "album",
    "artists" : [ {
      "external_urls" : {
        "spotify" : "https://open.spotify.com/artist/4gzpq5DPGxSnKTe4SA8HAU"
      },
      "href" : "https://api.spotify.com/v1/artists/4gzpq5DPGxSnKTe4SA8HAU",
      "id" : "4gzpq5DPGxSnKTe4SA8HAU",
      "name" : "Coldplay",
      "type" : "artist",
      "uri" : "spotify:artist:4gzpq5DPGxSnKTe4SA8HAU"
    } ],
    "available_markets" : [ "AD", "AR", "AT", "AU", "BE", "BG", "BO", "BR", "CA", "CH", "CL", "CO", "CR", "CY", "CZ", "DE", "DK", "DO", "EC", "EE", "ES", "FI", "FR", "GB", "GR", "GT", "HK", "HN", "HU", "ID", "IE", "IS", "IT", "JP", "LI", "LT", "LU", "LV", "MC", "MT", "MX", "MY", "NI", "NL", "NO", "NZ", "PA", "PE", "PH", "PL", "PT", "PY", "SE", "SG", "SK", "SV", "TR", "TW", "US", "UY" ],
    "external_urls" : {
      "spotify" : "https://open.spotify.com/album/0RHX9XECH8IVI3LNgWDpmQ"
    },
    "href" : "https://api.spotify.com/v1/albums/0RHX9XECH8IVI3LNgWDpmQ",
    "id" : "0RHX9XECH8IVI3LNgWDpmQ",
    "images" : [ {
        ...

 */

public class Item {

  private Album album;

  
  private List<Artist> artists;

  
  private List<java.lang.String> available_markets;

  
  private Integer disc_number;

  
  private Integer duration_ms;

  
  private Boolean explicit;

  private String href;

  
  private String id;

  
  private String name;

  
  private Integer popularity;

  
  private String preview_url;

  
  private Integer track_number;

  
  private String type;

  
  private String uri;

  public Album getAlbum() {
    return album;
  }
  public List<Artist> getArtists() {
    return artists;
  }
  public String getId() {
    return id;
  }
  public String getName() {
    return name;
  }
  public String getPreview_url() {
    return preview_url;
  }
  public String getType() {
    return type;
  }

  /**
  * Builder for Item
  **/
  public static class ItemBuilder {
    private Item toBuild = new Item();

    public ItemBuilder() {
    }

    public Item build() {
      return toBuild;
    }

    public ItemBuilder album(Album value) {
      toBuild.album = value;
      return this;
    }
    public ItemBuilder artists(List<Artist> value) {
      toBuild.artists = value;
      return this;
    }
    public ItemBuilder available_markets(List<java.lang.String> value) {
      toBuild.available_markets = value;
      return this;
    }
    public ItemBuilder disc_number(Integer value) {
      toBuild.disc_number = value;
      return this;
    }
    public ItemBuilder duration_ms(Integer value) {
      toBuild.duration_ms = value;
      return this;
    }
    public ItemBuilder explicit(Boolean value) {
      toBuild.explicit = value;
      return this;
    }
//    public ItemBuilder external_ids(External_ids value) {
//      toBuild.external_ids = value;
//      return this;
//    }
//    public ItemBuilder external_urls(External_urls value) {
//      toBuild.external_urls = value;
//      return this;
//    }
    public ItemBuilder href(String value) {
      toBuild.href = value;
      return this;
    }
    public ItemBuilder id(String value) {
      toBuild.id = value;
      return this;
    }
    public ItemBuilder name(String value) {
      toBuild.name = value;
      return this;
    }
    public ItemBuilder popularity(Integer value) {
      toBuild.popularity = value;
      return this;
    }
    public ItemBuilder preview_url(String value) {
      toBuild.preview_url = value;
      return this;
    }
    public ItemBuilder track_number(Integer value) {
      toBuild.track_number = value;
      return this;
    }
    public ItemBuilder type(String value) {
      toBuild.type = value;
      return this;
    }
    public ItemBuilder uri(String value) {
      toBuild.uri = value;
      return this;
    }
  }
}
